{
  "stats": {
    "suites": 0,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2021-11-20T05:27:05.621Z",
    "end": "2021-11-20T05:28:12.924Z",
    "duration": 67303,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c788e93c-2515-4101-975d-66606104ed4f",
      "title": "",
      "fullFile": "cypress/integration/testmeta.js",
      "file": "cypress/integration/testmeta.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [
        {
          "title": "Test scenario for ordering through Test Meta",
          "fullTitle": "Test scenario for ordering through Test Meta",
          "timedOut": null,
          "duration": 63385,
          "state": "passed",
          "speed": "slow",
          "pass": true,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "cy.visit(\"https://the-internet.herokuapp.com/login\"); // Without Entering User Name and Password and click on Login Button \ncy.get('.fa').should('contain', 'Login').click(); // click on login with assertions\ncy.wait(3000); //wait for 3 sec\ncy.get('#flash').should('contain', 'Your username is invalid!'); // assertion when unsuccessfully login\ncy.log('Login Failed. Inavlid Credentails'); // show message in log when enter incorrect crediantails\ncy.wait(3000); //wait for 3 sec\n// Enter User Name and Password Invalid with special charactors\ncy.get('#username').type('tom$mith', {\n  delay: 200\n}); //enter Username with 0.2 sec delay b/w letters\ncy.get('#password').type('$uper%ecretP@ssw0rd!', {\n  delay: 200\n}); //enter Password with 0.2 sec delay b/w letters\ncy.get('.fa').should('contain', 'Login').click(); // click on login with assertions\ncy.wait(3000); //wait for 3 sec\ncy.get('#flash').should('contain', 'Your username is invalid!'); // assertion when unsuccessfully login\ncy.log('Login Failed. Inavlid Credentails'); // show message in log when enter incorrect crediantails\ncy.wait(3000); //wait for 3 sec\n// Enter User Name and Password Invalid \ncy.get('#username').type('tomsmith', {\n  delay: 200\n}); // enter Username with 0.2 sec delay b/w letters\ncy.get('#password').type('SuperSecretPassword!sd', {\n  delay: 200\n}); //enter Password with 0.2 sec delay b/w letters\ncy.get('.fa').should('contain', 'Login').click(); // click on login with assertions\ncy.wait(3000); //wait for 3 sec\ncy.get('#flash').should('contain', 'Your password is invalid!'); // assertion when unsuccessfully login\ncy.log('Login Failed. Inavlid Credentails'); // show message in log when enter incorrect crediantails\ncy.wait(3000); //wait for 3 sec\n// Enter Valid User name and Password\ncy.get('#username').type('tomsmith', {\n  delay: 200\n}); // enter Username with 0.2 sec delay b/w letters\ncy.get('#password').type('SuperSecretPassword!', {\n  delay: 200\n}); //enter Password with 0.2 sec delay b/w letters\ncy.get('.fa').should('contain', 'Login').click(); // click on login with assertions\ncy.wait(3000); //wait for 3 sec\ncy.get('#flash').should('contain', 'You logged into a secure area!'); // assertion when successfully login\ncy.log('Successfully'); // show message in log when enter correct crediantails\ncy.wait(4000); //wait for 4 sec\n// Click on Logout button with Assertions\ncy.get('.icon-2x').should('contain', 'Logout').click(); // assertion on logout when clicked\ncy.wait(4000); //wait for 4 sec\ncy.get('#flash').should('contain', 'You logged out of the secure area!'); // assertion message on logout",
          "err": {},
          "uuid": "81c33326-8cc1-479a-93d0-10f9957c4a20",
          "parentUUID": "c788e93c-2515-4101-975d-66606104ed4f",
          "isHook": false,
          "skipped": false
        }
      ],
      "suites": [],
      "passes": [
        "81c33326-8cc1-479a-93d0-10f9957c4a20"
      ],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 63385,
      "root": true,
      "rootEmpty": false,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}